HWSWA2: automatization of hardware/software check

Contents

1. Creating distribution
2. Installation
3. Usage
4. Configuration
5. Advanced
6. Source files

1. =================== Creating distribution

Distribuition is created from git repo with the use of virtualenv and pyinstaller.

Obtain the latest source:

 from bitbucket:

$ #### Clone with git:
$ git clone https://gorilych@bitbucket.org/gorilych/hwswa2.git
$ cd hwswa2
$ #### Or download master
$ wget -c https://bitbucket.org/gorilych/hwswa2/get/master.tar.gz
$ tar zxf master.tar.gz
$ cd gorilych-hwswa2-*/

 or from git.gorilych.ru:

$ wget -cN https://git.gorilych.ru/hwswa2.git/snapshot/HEAD.tar.gz
$ tar zxf HEAD.tar.gz
$ cd hwswa2-HEAD-*

Prepare virtualenv:

$ virtualenv --no-site-packages env
$ source env/bin/activate

Install requirements:

(env)$ pip install -r requirements.txt

Create distribution with pyinstaller:

(env)$ pyinstaller --distpath=pyinstaller/hwswa2/ --workpath=pyinstaller/build/ \
                   --clean pyinstaller/hwswa2.spec && \
                   \cp -af README LICENSE CHANGELOG.rst config/ checks/ pyinstaller/hwswa2/ && \
                   pushd pyinstaller/ && tar zcf hwswa2.tgz hwswa2 && popd

Distribution archive will be stored in pyinstaller/hwswa2.tgz

Requirements: python >=2.6, virtualenv, gcc + glibc-headers (to compile pycrypto)

2. =================== Installation

Upload distribution to the server which has access to all checked servers.

Unpack.

Edit configuration according to your needs.

Populate networks.yaml and servers.yaml with information about environment to check.

Create missing role.yaml files in checks/, if needed.

Prepare convenient alias. 

# mkdir somedir && cd somedir
# wget -Nc https://bitbucket.org/gorilych/hwswa2/downloads/hwswa2-centos6x64.tgz
# # or https://bitbucket.org/gorilych/hwswa2/downloads/hwswa2-centos5x64.tgz
# # or https://bitbucket.org/gorilych/hwswa2/downloads/hwswa2-debian7x64.tgz
# tar zxf hwswa2-*.tgz

# cp -a hwswa2/config cfg
# vim cfg/main.cfg
# vim cfg/networks.yaml
# vim cfg/servers.yaml

# cp checks/mysql.yaml checks/newrole.yaml
# vim checks/newrole.yaml

alias hwswa2="`pwd`/hwswa2/hwswa2 -c `pwd`/cfg/main.cfg -s `pwd`/cfg/servers.yaml -n `pwd`/cfg/networks.yaml -r `pwd`/reports"

3. =================== Usage

All possible options are shown by '-h' switch:

hwswa2$ hwswa2 -h
usage: hwswa2 [-h] [--version] [-c CONFIGFILE] [-s SERVERSFILE]
              [-n NETWORKSFILE] [-l LOGFILE] [-r REPORTSDIR] [-d]
              {check,prepare,checkall,prepareall,shell,exec,_exec,put} ...

HWSWA: tool for automatization of hardware/software check

optional arguments:
  -h, --help            show this help message and exit
  --version             show program's version number and exit
  -c CONFIGFILE, --config CONFIGFILE
                        path to config file
  -s SERVERSFILE, --servers SERVERSFILE
                        path to servers file
  -n NETWORKSFILE, --networks NETWORKSFILE
                        path to networks file
  -l LOGFILE, --log LOGFILE
                        path to log file
  -r REPORTSDIR, --reports REPORTSDIR
                        directory to store reports
  -d, --debug           enable debug

Commands:
  {check,prepare,checkall,prepareall,shell,exec,_exec,put}
    check               check specific servers
    prepare             prepare specific servers
    checkall            check all servers
    prepareall          prepare all servers
    shell               open shell to server
    exec                execute command interactively
    _exec               execute command non-interactively
    put                 copy file to server

4. =================== Configuration

Main configuration file is hwswa2/config/main.cfg, variables are self-explanatory.

hwswa2/config/servers.yaml and hwswa2/config/networks.yaml are examples of servers access info and networks info, it should be modified with actual information prior to running.

5. =================== Advanced

You can modify checks/*.yaml or checks/remote-scripts/ files for your own needs.

6. =================== Source files

hwswa2$ ls -F
3rd-party/  bin/  checks/  config/  docs/  hwswa2/  libs/  logs/  README  tests/  TODO
hwswa2$ ls -F checks/
common.yaml  pvclin.yaml  remote-scripts/
hwswa2$ ls -F checks/remote-scripts/
bin32/  bin64/
hwswa2$ ls -F config/
main.cfg  networks.yaml  servers.yaml
hwswa2$ ls -F logs/
hwswa2.log  reports/
hwswa2$ ls -F logs/reports/
localhost

3rd-party/       - 3rd party python libraries and scripts for internal usage

bin/hwswa2       - script to run directly from source, without building binary distribution

checks/          - location of role check description files:
                   <role name (lowercase)>.yaml
checks/remote-scripts/{bin32,bin64}
                 - location of binaries copied to remote server in order to run
                   specific checks (like nc binary)

config/main.cfg  - main configuration file. Basically, it is not needed to
                   modify, except for specific cases, like for debug.

config/networks.yaml
                 - contains network definitions

config/servers.yaml
                 - contains server definitions (with access details)

logs/hwswa2.log  - application log
logs/reports/    - directory to store reports to

