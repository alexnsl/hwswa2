HWSWA2: automatization of hardware/software check

Contents

1. Creating distribution
2. Installation
3. Usage
4. Configuration
5. Advanced
6. Source files

1. =================== Creating distribution

Obtain the latest source from https://git.gorilych.dnsd.me/hwswa2.git/snapshot/HEAD.tar.gz

Unpack it and go to the source directory.

To prepare distribution, run in source directory:

pyinstaller --distpath=pyinstaller/hwswa2/ --workpath=pyinstaller/build/
            --clean pyinstaller/hwswa2.spec && \
\cp -af README docs/ config/ checks/ pyinstaller/hwswa2/ && \
pushd pyinstaller/ && \
tar zcf hwswa2.tgz hwswa2 && \
popd

Distribution archive will be pyinstaller/hwswa2.tgz

Requirements: pyinstaller, python >=2.6, python-crypto >= 2.1, GnuMP

2. =================== Installation

Upload distribution (hwswa2.tgz) to the server which has access to all checked servers.

Unpack.

3. =================== Usage

All possible options are shown by '-h' switch:

hwswa2$ hwswa2 -h
usage: hwswa2 [-h] [--version] [-c CONFIGFILE] [-s SERVERSFILE]
              [-n NETWORKSFILE] [-l LOGFILE] [-r REPORTSDIR] [-d]
              {check,prepare,checkall,prepareall,shell,exec,_exec,put} ...

HWSWA: tool for automatization of hardware/software check

optional arguments:
  -h, --help            show this help message and exit
  --version             show program's version number and exit
  -c CONFIGFILE, --config CONFIGFILE
                        path to config file
  -s SERVERSFILE, --servers SERVERSFILE
                        path to servers file
  -n NETWORKSFILE, --networks NETWORKSFILE
                        path to networks file
  -l LOGFILE, --log LOGFILE
                        path to log file
  -r REPORTSDIR, --reports REPORTSDIR
                        directory to store reports
  -d, --debug           enable debug

Commands:
  {check,prepare,checkall,prepareall,shell,exec,_exec,put}
    check               check specific servers
    prepare             prepare specific servers
    checkall            check all servers
    prepareall          prepare all servers
    shell               open shell to server
    exec                execute command interactively
    _exec               execute command non-interactively
    put                 copy file to server

4. =================== Configuration

Main configuration file is hwswa2/config/main.cfg, variables are self-explanatory.

hwswa2/config/servers.yaml and hwswa2/config/networks.yaml are examples of servers access info and networks info, it should be modified with actual information prior to running.

5. =================== Advanced

You can modify checks/*.yaml or checks/remote-scripts/ files for your own needs.

6. =================== Source files

hwswa2$ ls -F
3rd-party/  bin/  checks/  config/  docs/  hwswa2/  libs/  logs/  README  tests/  TODO
hwswa2$ ls -F checks/
common.yaml  pvclin.yaml  remote-scripts/
hwswa2$ ls -F checks/remote-scripts/
bin32/  bin64/
hwswa2$ ls -F config/
main.cfg  networks.yaml  servers.yaml
hwswa2$ ls -F logs/
hwswa2.log  reports/
hwswa2$ ls -F logs/reports/
localhost

3rd-party/       - 3rd party python libraries and scripts for internal usage

bin/hwswa2       - script to run directly from source, without building binary distribution

checks/          - location of role check description files:
                   <role name (lowercase)>.yaml
checks/remote-scripts/{bin32,bin64}
                 - location of binaries copied to remote server in order to run
                   specific checks (like nc binary)

config/main.cfg  - main configuration file. Basically, it is not needed to
                   modify, except for specific cases, like for debug.

config/networks.yaml
                 - contains network definitions

config/servers.yaml
                 - contains server definitions (with access details)

logs/hwswa2.log  - application log
logs/reports/    - directory to store reports to

